ggplot(h50_300_1,aes(y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(tidyr)
library(readr)
library(xtable)
library(knitr)
ggplot(h50_300_4,aes(x=spk_class,y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))
ggplot(nnet5c_hard_50_300_ext,aes(x=spk_class,y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))
ggplot(nnet5c_hard_50_300_ext,aes(x=spk_class,y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))+scale_x_discrete(labels=c("Ancres","Ponctuel·les"))
ggplot(nnet5c_hard_50_300_ext,aes(x=wc,fill=spk_class))+geom_histogram(position="dodge")+scale_x_continuous(lim=c(0,1000))+scale_fill_discrete("Speaker roles",labels=c("Anchors","Punctuals"))
ggplot(nnet5c_hard_50_300_ext,aes(x=wc,y=WER,colour=spk_class))+geom_point()+scale_y_continuous(lim=c(0,1.5))+scale_x_continuous(lim=c(0,3000))+scale_colour_discrete("Speaker roles",labels=c("Anchors","Punctuals"))
ggplot(nnet5c_hard_50_300_ext,aes(x=spk_class,y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))+scale_x_discrete(labels=c("Ancres","Ponctuel·les"))
#h50_300_4<-subset(per_spk_nnet5c_hard_50_300,spk_class==4)
#h50_300_1<-subset(per_spk_nnet5c_hard_50_300,spk_class==1)
#ggplot(h50_300_4,aes(y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))
#ggplot(h50_300_1,aes(y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))
summary(h50_300_4)
ggplot(nnet5c_hard_50_300_ext,aes(x=wc,y=WER,fill=gender,colour=spk_class))+geom_point()+scale_y_continuous(lim=c(0,1.5))+scale_x_continuous(lim=c(0,3000))+scale_colour_discrete("Speaker roles",labels=c("Anchors","Punctuals"))
ggplot(nnet5c_hard_50_300_ext,aes(x=wc,y=WER,fill=gender,colour=spk_class))+geom_point()+scale_y_continuous(lim=c(0,1.5))+scale_x_continuous(lim=c(0,3000))+scale_shape(aes(spk_class),"Speaker roles",labels=c("Anchors","Punctuals"))
ggplot(nnet5c_hard_50_300_ext,aes(x=wc,y=WER,colour=gender))+geom_point()+scale_y_continuous(lim=c(0,1.5))+scale_x_continuous(lim=c(0,3000))+scale_shape(aes(spk_class),"Speaker roles",labels=c("Anchors","Punctuals"))
ggplot(nnet5c_hard_50_300_ext,aes(x=wc,y=WER,colour=gender))+geom_point(shape=spk_class)+scale_y_continuous(lim=c(0,1.5))+scale_x_continuous(lim=c(0,3000))
View(nnet5c_hard_50_150_ext)
ggplot(nnet5c_hard_50_300_ext,aes(x=wc,y=WER,colour=gender,shape=spk_class))+geom_point()+scale_y_continuous(lim=c(0,1.5))+scale_x_continuous(lim=c(0,3000))
ggplot(nnet5c_hard_50_300_ext,aes(x=wc,y=WER,colour=gender,shape=spk_class))+geom_point()+scale_y_continuous(lim=c(0,1.5))+scale_x_continuous(lim=c(0,1000))
ggplot(nnet5c_hard_50_300_ext,aes(x=wc,y=WER,colour=gender,shape=spk_class))+geom_point()+scale_y_continuous(lim=c(0,1.5))+scale_x_continuous(lim=c(0,3000))
ggplot(nnet5c_hard_50_300_ext,aes(x=wc,y=WER,colour=spk_class,shape=gender))+geom_point()+scale_y_continuous(lim=c(0,1.5))+scale_x_continuous(lim=c(0,3000))
#Import des données obtenues via réplication du système KALDI (attention pas de rescoring 5-gram comme pour le système de Zied)
nnet5c <- read_delim("/home/getalp/garnerim/Bureau/decode_kaldi/decode-nnet5c/nnet5c.csv",
"\t",
escape_double = FALSE,
col_types = cols(gender = col_factor(levels = c("female","male")),
spk_class = col_factor(levels = c("4", "1", "3", "2"))),
trim_ws = TRUE)
#On supprime les locuteurs n'ayant pas de genre identifié
nnet5c <- subset(nnet5c,gender!="NA")
# On regroupe par spk/show, recalcul des WER
per_spk_nnet5c <- nnet5c %>% group_by(spk,show,spk_class,gender) %>% summarize(turns=sum(turns),length=sum(length),mistakes=sum(mistakes),wc=sum(wc),WER=mistakes/wc)
nnet5c_ext<-subset(per_spk_nnet5c,spk_class=="4"|spk_class=="1")
ggplot(nnet5c_ext,aes(x=wc,fill=spk_class))+geom_histogram(position="dodge")
#scale_x_continuous(lim=c(0,1000))+scale_fill_discrete("Speaker roles",labels=c("Anchors","Punctuals"))
ggplot(nnet5c_ext,aes(x=wc,y=WER,colour=spk_class))+geom_point()+scale_y_continuous(lim=c(0,1.5))+scale_x_continuous(lim=c(0,3000))+scale_colour_discrete("Speaker roles",labels=c("Anchors","Punctuals"))
ggplot(nnet5c_ext,aes(x=spk_class,y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))+scale_x_discrete(labels=c("Ancres","Ponctuel·les"))
View(per_spk_nnet5c)
View(nnet5c_ext)
test<-subset(nnet5c_hard_50_300,spk_class=="4"|spk_class=="1")
ggplot(test,aes(x=spk_class,y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))+scale_x_discrete(labels=c("Ancres","Ponctuel·les"))
View(test)
ggplot(test,aes(x=spk_class,y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(+scale_x_discrete(labels=c("Ancres","Ponctuel·les"))
)
ggplot(test,aes(x=spk_class,y=WER,fill=gender))+geom_boxplot()+scale_y_continuous()+scale_x_discrete(labels=c("Ancres","Ponctuel·les"))
ggplot(test,aes(x=spk_class,y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,150))+scale_x_discrete(labels=c("Ancres","Ponctuel·les"))
summary(nnet5c_hard_50_300_ext)
test2<-subset(nnet5c_hard_50_150,spk_class=="4"|spk_class=="1")
ggplot(test2,aes(x=spk_class,y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,150))+scale_x_discrete(labels=c("Ancres","Ponctuel·les"))
ggplot(test2,aes(x=spk_class,y=WER,fill=spk_class))+geom_boxplot(point)+scale_y_continuous(lim=c(0,150))+scale_fill_discrete(labels=c("Ancres","Ponctuel·les"))
ggplot(test2,aes(x=spk_class,y=WER,fill=spk_class))+geom_point())+scale_y_continuous(lim=c(0,150))+scale_fill_discrete(labels=c("Ancres","Ponctuel·les"))
ggplot(test2,aes(x=spk_class,y=WER,fill=spk_class))+geom_point()+scale_y_continuous(lim=c(0,150))+scale_fill_discrete(labels=c("Ancres","Ponctuel·les"))
ggplot(test2,aes(x=wc,y=WER,fill=spk_class))+geom_point()+scale_y_continuous(lim=c(0,150))+scale_fill_discrete(labels=c("Ancres","Ponctuel·les"))
ggplot(test2,aes(x=wc,y=WER,colour=spk_class))+geom_point()+scale_y_continuous(lim=c(0,150))+scale_colour_discrete(labels=c("Ancres","Ponctuel·les"))
ggplot(test2,aes(x=wc,y=WER,colour=spk_class))+geom_point()+scale_y_continuous(lim=c(0,150))+scale_colour_discrete(labels=c("Ancres","Ponctuel·les"))+scale_x_continuous(lim=c(0,2000))
ggplot(nnet5c_ext,aes(x=wc,y=WER,colour=spk_class))+geom_point()+scale_y_continuous(lim=c(0,150))+scale_colour_discrete(labels=c("Ancres","Ponctuel·les"))+scale_x_continuous(lim=c(0,2000))
View(per_spk_nnet5c_hard_50_150)
View(test)
View(nnet5c)
ggplot(nnet5c_ext/100,aes(x=wc,y=WER,colour=spk_class))+geom_point()+scale_y_continuous(lim=c(0,150))+scale_colour_discrete(labels=c("Ancres","Ponctuel·les"))+scale_x_continuous(lim=c(0,2000))
ggplot(nnet5c_ext,aes(x=wc,y=WER/100,colour=spk_class))+geom_point()+scale_y_continuous(lim=c(0,150))+scale_colour_discrete(labels=c("Ancres","Ponctuel·les"))+scale_x_continuous(lim=c(0,2000))
ggplot(nnet5c_ext,aes(x=wc,y=WER,colour=spk_class))+geom_point()+scale_y_continuous(lim=c(0,1.50))+scale_colour_discrete(labels=c("Ancres","Ponctuel·les"))+scale_x_continuous(lim=c(0,2000))
test_old<- subset(nnet5c,spk_class=="4"|spk_class=="1")
ggplot(testçold,aes(x=wc,y=WER,colour=spk_class))+geom_point()+scale_y_continuous(lim=c(0,1.50))+scale_colour_discrete(labels=c("Ancres","Ponctuel·les"))+scale_x_continuous(lim=c(0,2000))
ggplot(test_old,aes(x=wc,y=WER,colour=spk_class))+geom_point()+scale_y_continuous(lim=c(0,1.50))+scale_colour_discrete(labels=c("Ancres","Ponctuel·les"))+scale_x_continuous(lim=c(0,2000))
View(test_old)
ggplot(test_old,aes(x=wc,y=WER/100,colour=spk_class))+geom_point()+scale_y_continuous(lim=c(0,1.50))+scale_colour_discrete(labels=c("Ancres","Ponctuel·les"))+scale_x_continuous(lim=c(0,2000))
ggplot(test_old,aes(x=wc,y=WER/100,colour=spk_class))+geom_point()+scale_y_continuous(lim=c(0,1.50))+scale_colour_discrete(labels=c("Ancres","Ponctuel·les"))+scale_x_continuous(lim=c(0,2000))
ggplot(test,aes(x=wc,y=WER,colour=spk_class))+geom_point()+scale_y_continuous(lim=c(0,1.50))+scale_colour_discrete(labels=c("Ancres","Ponctuel·les"))+scale_x_continuous(lim=c(0,2000))
View(test)
ggplot(test,aes(x=wc,y=WER/100,colour=spk_class))+geom_point()+scale_y_continuous(lim=c(0,1.50))+scale_colour_discrete(labels=c("Ancres","Ponctuel·les"))+scale_x_continuous(lim=c(0,2000))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(tidyr)
library(readr)
library(xtable)
library(knitr)
#Import des données obtenues via réplication du système KALDI (attention pas de rescoring 5-gram comme pour le système de Zied)
nnet5c <- read_delim("/home/getalp/garnerim/Bureau/decode_kaldi/decode-nnet5c/nnet5c.csv",
"\t",
escape_double = FALSE,
col_types = cols(gender = col_factor(levels = c("female","male")),
spk_class = col_factor(levels = c("4", "1", "3", "2"))),
trim_ws = TRUE)
#On supprime les locuteurs n'ayant pas de genre identifié
nnet5c <- subset(nnet5c,gender!="NA")
# On regroupe par spk/show, recalcul des WER
per_spk_nnet5c <- nnet5c %>% group_by(spk,show,spk_class,gender) %>% summarize(turns=sum(turns),length=sum(length),mistakes=sum(mistakes),wc=sum(wc),WER=mistakes/wc)
test_old<- subset(nnet5c,spk_class=="4"|spk_class=="1")
nnet5c_ext<-subset(per_spk_nnet5c,spk_class=="4"|spk_class=="1")
ggplot(nnet5c_ext,aes(x=wc,fill=spk_class))+geom_histogram(position="dodge")
#scale_x_continuous(lim=c(0,1000))+scale_fill_discrete("Speaker roles",labels=c("Anchors","Punctuals"))
ggplot(nnet5c_ext,aes(x=wc,y=WER,colour=spk_class))+geom_point()+scale_y_continuous(lim=c(0,1.5))+scale_x_continuous(lim=c(0,3000))+scale_colour_discrete("Speaker roles",labels=c("Anchors","Punctuals"))
ggplot(nnet5c_ext,aes(x=spk_class,y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))+scale_x_discrete(labels=c("Ancres","Ponctuel·les"))
#Import des données obtenues via réplication du système KALDI (attention pas de rescoring 5-gram comme pour le système de Zied) + définition des classes "en dur", seuils globaux, indépendants des émissions
nnet5c_hard_50_150 <- read_delim("/home/getalp/garnerim/Bureau/decode_kaldi/decode-nnet5c/nnet5c_hard_50_150.csv",
"\t",
escape_double = FALSE,
col_types = cols(gender = col_factor(levels = c("female","male")),
spk_class = col_factor(levels = c("4", "1", "3", "2"))),
trim_ws = TRUE)
#On supprime les locuteurs n'ayant pas de genre identifié
nnet5c_hard_50_150 <- subset(nnet5c_hard_50_150,gender!="NA")
# On regroupe par spk/show, recalcul des WER
per_spk_nnet5c_hard_50_150 <- nnet5c_hard_50_150 %>% group_by(spk,show,spk_class,gender) %>% summarize(turns=sum(turns),length=sum(length),mistakes=sum(mistakes),wc=sum(wc),WER=mistakes/wc)
nnet5c_hard_50_150_ext<-subset(per_spk_nnet5c_hard_50_150,spk_class=="4"|spk_class=="1")
ggplot(nnet5c_hard_50_150_ext,aes(x=wc,fill=spk_class))+geom_histogram(position="dodge")
#scale_x_continuous(lim=c(0,1000))+scale_fill_discrete("Speaker roles",labels=c("Anchors","Punctuals"))
ggplot(nnet5c_hard_50_150_ext,aes(x=wc,y=WER,colour=spk_class))+geom_point()+scale_y_continuous(lim=c(0,1.5))+scale_x_continuous(lim=c(0,3000))+scale_colour_discrete("Speaker roles",labels=c("Anchors","Punctuals"))
ggplot(nnet5c_hard_50_150_ext,aes(x=spk_class,y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))+scale_x_discrete(labels=c("Ancres","Ponctuel·les"))
#h50_150_4<-subset(per_spk_nnet5c_hard_50_150,spk_class==4)
#h50_150_1<-subset(per_spk_nnet5c_hard_50_150,spk_class==1)
#ggplot(h50_150_4,aes(y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))
#ggplot(h50_150_1,aes(y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))
#Import des données obtenues via réplication du système KALDI (attention pas de rescoring 5-gram comme pour le système de Zied)
nnet5c_hard_50_300 <- read_delim("/home/getalp/garnerim/Bureau/decode_kaldi/decode-nnet5c/nnet5c_hard_50_300.csv",
"\t",
escape_double = FALSE,
col_types = cols(gender = col_factor(levels = c("female","male")),
spk_class = col_factor(levels = c("4", "1", "3", "2"))),
trim_ws = TRUE)
#On supprime les locuteurs n'ayant pas de genre identifié
nnet5c_hard_50_300 <- subset(nnet5c_hard_50_300,gender!="NA")
# On regroupe par spk/show, recalcul des WER
per_spk_nnet5c_hard_50_300 <- nnet5c_hard_50_300 %>% group_by(spk,show,spk_class,gender) %>% summarize(turns=sum(turns),length=sum(length),mistakes=sum(mistakes),wc=sum(wc),WER=mistakes/wc)
nnet5c_hard_50_300_ext<-subset(per_spk_nnet5c_hard_50_300,spk_class=="4"|spk_class=="1")
ggplot(nnet5c_hard_50_300_ext,aes(x=wc,fill=spk_class))+geom_histogram(position="dodge")
#+scale_x_continuous(lim=c(0,1000))+scale_fill_discrete("Speaker roles",labels=c("Anchors","Punctuals"))
ggplot(nnet5c_hard_50_300_ext,aes(x=wc,y=WER,colour=spk_class))+geom_point()+scale_y_continuous(lim=c(0,1.5))+scale_x_continuous(lim=c(0,3000))+scale_colour_discrete("Speaker roles",labels=c("Anchors","Punctuals"))
ggplot(nnet5c_hard_50_300_ext,aes(x=spk_class,y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))+scale_x_discrete(labels=c("Ancres","Ponctuel·les"))
#h50_300_4<-subset(per_spk_nnet5c_hard_50_300,spk_class==4)
#h50_300_1<-subset(per_spk_nnet5c_hard_50_300,spk_class==1)
#ggplot(h50_300_4,aes(y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))
#ggplot(h50_300_1,aes(y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(tidyr)
library(readr)
library(xtable)
library(knitr)
ggplot(nnet5c_ext,aes(x=spk_class,y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))+scale_x_discrete(labels=c("Ancres","Ponctuel·les"))+scale_x_discrete("")
ggplot(nnet5c_ext,aes(x=spk_class,y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))+scale_x_discrete("",labels=c("Ancres","Ponctuel·les"))
ggplot(nnet5c_ext,aes(x=spk_class,y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))+scale_x_discrete("",labels=c("Ancres","Ponctuel·les"))+scale_fill_discrete("Gender",labels=c("femme","homme"))
ggplot(nnet5c_ext,aes(x=spk_class,y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))+scale_x_discrete("",labels=c("Ancres","Ponctuel·les"))+scale_fill_discrete("Genre",labels=c("femme","homme"))
ggplot(nnet5c_ext,aes(x=wc,y=WER,colour=spk_class))+geom_point()+scale_y_continuous(lim=c(0,1.5))+scale_x_continuous(lim=c(0,3000))+scale_colour_discrete("Speaker roles",labels=c("Anchors","Punctuals"))
ggplot(nnet5c_ext,aes(x=wc,y=WER,colour=spk_class))+geom_point()+scale_y_continuous(lim=c(0,1.5))+scale_x_continuous(lim=c(0,3000))+scale_colour_discrete("Speaker roles",labels=c("Anchors","Punctuals"))
ggplot(nnet5c_ext,aes(x=spk_class,y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))+scale_x_discrete("",labels=c("Ancres","Ponctuel·les"))+scale_fill_discrete("Genre",labels=c("femme","homme"))
#Import des données obtenues via réplication du système KALDI (attention pas de rescoring 5-gram comme pour le système de Zied)
nnet5c_hard_50_300 <- read_delim("/home/getalp/garnerim/Bureau/decode_kaldi/decode-nnet5c/nnet5c_hard_50_300.csv",
"\t",
escape_double = FALSE,
col_types = cols(gender = col_factor(levels = c("female","male")),
spk_class = col_factor(levels = c("4", "1", "3", "2"))),
trim_ws = TRUE)
#On supprime les locuteurs n'ayant pas de genre identifié
nnet5c_hard_50_300 <- subset(nnet5c_hard_50_300,gender!="NA")
# On regroupe par spk/show, recalcul des WER
per_spk_nnet5c_hard_50_300 <- nnet5c_hard_50_300 %>% group_by(spk,show,spk_class,gender) %>% summarize(turns=sum(turns),length=sum(length),mistakes=sum(mistakes),wc=sum(wc),WER=mistakes/wc)
nnet5c_hard_50_300_ext<-subset(per_spk_nnet5c_hard_50_300,spk_class=="4"|spk_class=="1")
ggplot(nnet5c_hard_50_150_ext,aes(x=wc,fill=spk_class))+geom_histogram(position="dodge")
#scale_x_continuous(lim=c(0,1000))+scale_fill_discrete("Speaker roles",labels=c("Anchors","Punctuals"))
ggplot(nnet5c_hard_50_150_ext,aes(x=wc,y=WER,colour=spk_class))+geom_point()+scale_y_continuous(lim=c(0,1.5))+scale_x_continuous(lim=c(0,3000))+scale_colour_discrete("Speaker roles",labels=c("Anchors","Punctuals"))
ggplot(nnet5c_hard_50_150_ext,aes(x=spk_class,y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))+scale_x_discrete(labels=c("Ancres","Ponctuel·les"))
#h50_150_4<-subset(per_spk_nnet5c_hard_50_150,spk_class==4)
#h50_150_1<-subset(per_spk_nnet5c_hard_50_150,spk_class==1)
#ggplot(h50_150_4,aes(y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))
#ggplot(h50_150_1,aes(y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))
View(per_spk_nnet5c)
table_nnet5c<-nnet5c_ext %>% group_by(spk_class,gender) %>% summarize(mean=mean(WER),median=median(WER),avWER=sum(mistakes)/sum(wc))
View(table_nnet5c)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(tidyr)
library(readr)
library(xtable)
library(knitr)
#Import des données obtenues via réplication du système KALDI (attention pas de rescoring 5-gram comme pour le système de Zied)
nnet5c <- read_delim("/home/getalp/garnerim/Bureau/decode_kaldi/decode-nnet5c/nnet5c.csv",
"\t",
escape_double = FALSE,
col_types = cols(gender = col_factor(levels = c("female","male")),
spk_class = col_factor(levels = c("4", "1", "3", "2"))),
trim_ws = TRUE)
#On supprime les locuteurs n'ayant pas de genre identifié
nnet5c <- subset(nnet5c,gender!="NA")
# On regroupe par spk/show, recalcul des WER
per_spk_nnet5c <- nnet5c %>% group_by(spk,show,spk_class,gender) %>% summarize(turns=sum(turns),length=sum(length),mistakes=sum(mistakes),wc=sum(wc),WER=mistakes/wc)
test_old<- subset(nnet5c,spk_class=="4"|spk_class=="1")
nnet5c_ext<-subset(per_spk_nnet5c,spk_class=="4"|spk_class=="1")
table_nnet5c<-nnet5c_ext %>% group_by(spk_class,gender) %>% summarize(mean=mean(WER),median=median(WER),avWER=sum(mistakes)/sum(wc))
ggplot(nnet5c_ext,aes(x=wc,fill=spk_class))+geom_histogram(position="dodge")
#scale_x_continuous(lim=c(0,1000))+scale_fill_discrete("Speaker roles",labels=c("Anchors","Punctuals"))
ggplot(nnet5c_ext,aes(x=wc,y=WER,colour=spk_class))+geom_point()+scale_y_continuous(lim=c(0,1.5))+scale_x_continuous(lim=c(0,3000))+scale_colour_discrete("Speaker roles",labels=c("Anchors","Punctuals"))
ggplot(nnet5c_ext,aes(x=spk_class,y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))+scale_x_discrete("",labels=c("Ancres","Ponctuel·les"))+scale_fill_discrete("Genre",labels=c("femme","homme"))
#Import des données obtenues via réplication du système KALDI (attention pas de rescoring 5-gram comme pour le système de Zied)
nnet5c <- read_delim("/home/getalp/garnerim/Bureau/decode_kaldi/decode-nnet5c/nnet5c.csv",
"\t",
escape_double = FALSE,
col_types = cols(gender = col_factor(levels = c("female","male")),
spk_class = col_factor(levels = c("4", "1", "3", "2"))),
trim_ws = TRUE)
#On supprime les locuteurs n'ayant pas de genre identifié
nnet5c <- subset(nnet5c,gender!="NA")
# On regroupe par spk/show, recalcul des WER
per_spk_nnet5c <- nnet5c %>% group_by(spk,show,spk_class,gender) %>% summarize(turns=sum(turns),length=sum(length),mistakes=sum(mistakes),wc=sum(wc),WER=mistakes/wc)
nnet5c_per_ep<- subset(nnet5c,spk_class=="4"|spk_class=="1")
nnet5c_ext<-subset(per_spk_nnet5c,spk_class=="4"|spk_class=="1")
table_nnet5c<-nnet5c_ext %>% group_by(spk_class,gender) %>% summarize(mean=mean(WER),median=median(WER),avWER=sum(mistakes)/sum(wc))
ggplot(nnet5c_ext,aes(x=wc,fill=spk_class))+geom_histogram(position="dodge")
#scale_x_continuous(lim=c(0,1000))+scale_fill_discrete("Speaker roles",labels=c("Anchors","Punctuals"))
ggplot(nnet5c_ext,aes(x=wc,y=WER,colour=spk_class))+geom_point()+scale_y_continuous(lim=c(0,1.5))+scale_x_continuous(lim=c(0,3000))+scale_colour_discrete("Speaker roles",labels=c("Anchors","Punctuals"))
ggplot(nnet5c_ext,aes(x=spk_class,y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))+scale_x_discrete("",labels=c("Ancres","Ponctuel·les"))+scale_fill_discrete("Genre",labels=c("femme","homme"))
kable(table_nnet5c)
table_nnet5c<-nnet5c_ext %>% group_by(spk_class,gender) %>% summarize(avWER=mean(WER),median=median(WER),WER=sum(mistakes)/sum(wc))
#Import des données obtenues via réplication du système KALDI (attention pas de rescoring 5-gram comme pour le système de Zied)
nnet5c <- read_delim("/home/getalp/garnerim/Bureau/decode_kaldi/decode-nnet5c/nnet5c.csv",
"\t",
escape_double = FALSE,
col_types = cols(gender = col_factor(levels = c("female","male")),
spk_class = col_factor(levels = c("4", "1", "3", "2"))),
trim_ws = TRUE)
#On supprime les locuteurs n'ayant pas de genre identifié
nnet5c <- subset(nnet5c,gender!="NA")
# On regroupe par spk/show, recalcul des WER
per_spk_nnet5c <- nnet5c %>% group_by(spk,show,spk_class,gender) %>% summarize(turns=sum(turns),length=sum(length),mistakes=sum(mistakes),wc=sum(wc),WER=mistakes/wc)
nnet5c_per_ep<- subset(nnet5c,spk_class=="4"|spk_class=="1")
nnet5c_ext<-subset(per_spk_nnet5c,spk_class=="4"|spk_class=="1")
table_nnet5c<-nnet5c_ext %>% group_by(spk_class,gender) %>% summarize(avWER=mean(WER),median=median(WER),WER=sum(mistakes)/sum(wc))
kable(table_nnet5c)
ggplot(nnet5c_ext,aes(x=wc,fill=spk_class))+geom_histogram(position="dodge")
#scale_x_continuous(lim=c(0,1000))+scale_fill_discrete("Speaker roles",labels=c("Anchors","Punctuals"))
ggplot(nnet5c_ext,aes(x=wc,y=WER,colour=spk_class))+geom_point()+scale_y_continuous(lim=c(0,1.5))+scale_x_continuous(lim=c(0,3000))+scale_colour_discrete("Speaker roles",labels=c("Anchors","Punctuals"))
ggplot(nnet5c_ext,aes(x=spk_class,y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))+scale_x_discrete("",labels=c("Ancres","Ponctuel·les"))+scale_fill_discrete("Genre",labels=c("femme","homme"))
#ggplot(nnet5c_ext,aes(x=spk_class,y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))+scale_x_discrete("",labels=c("Ancres","Ponctuel·les"))+scale_fill_discrete("Genre",labels=c("femme","homme"))
ggplot(nnet5c_ext,aes(x=wc,fill=spk_class))+geom_histogram(position="dodge")+scale_x_continuous(lim=c(0,1000))+scale_fill_discrete("Speaker roles",labels=c("Anchors","Punctuals"))
ggplot(nnet5c_ext,aes(x=wc,fill=spk_class))+geom_histogram(position="dodge")+scale_x_continuous("Nombre de mots total (ici limité à 1000",lim=c(0,1000))+scale_fill_discrete("Speaker roles",labels=c("Anchors","Punctuals"))+scale_y_continuous("Nombre de locuteurs·trices")
ggplot(nnet5c_ext,aes(x=wc,fill=spk_class))+geom_histogram(position="dodge")+scale_x_continuous("Nombre de mots total (ici limité à 1000)",lim=c(0,1000))+scale_fill_discrete("Roles",labels=c("Ancres","Ponctuel·les"))+scale_y_continuous("Nombre de locuteurs·trices")
ggplot(nnet5c_ext,aes(x=wc,fill=spk_class))+geom_histogram(position="dodge")+scale_x_continuous("Nombre de mots total par locuteur·trice (ici limité à 1000)",lim=c(0,1000))+scale_fill_discrete("Roles",labels=c("Ancres","Ponctuel·les"))+scale_y_continuous("Nombre de locuteurs·trices")
ggplot(nnet5c_ext,aes(x=wc,fill=spk_class))+geom_histogram(position="dodge")+scale_x_continuous("Nombre de mots total par locuteur·trice (ici limité à 1000)",lim=c(0,1000))+scale_fill_discrete("Roles",labels=c("Ancres","Ponctuel·les"))+scale_y_continuous("Nombre de locuteurs·trices")
ggplot(nnet5c_ext,aes(x=wc,y=WER,colour=spk_class))+geom_point()+scale_y_continuous(lim=c(0,1.5))+scale_x_continuous(lim=c(0,3000))+scale_colour_discrete("Speaker roles",labels=c("Anchors","Punctuals"))
#ggplot(nnet5c_ext,aes(x=spk_class,y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))+scale_x_discrete("",labels=c("Ancres","Ponctuel·les"))+scale_fill_discrete("Genre",labels=c("femme","homme"))
ggplot(nnet5c_ext,aes(x=wc,fill=spk_class))+geom_histogram(position="dodge",binwidth = 30)+scale_x_continuous("Nombre de mots total par locuteur·trice (ici limité à 1000)",lim=c(0,1000))+scale_fill_discrete("Roles",labels=c("Ancres","Ponctuel·les"))+scale_y_continuous("Nombre de locuteurs·trices")
ggplot(nnet5c_hard_50_300_ext,aes(x=wc,fill=spk_class))+geom_histogram(position="dodge")
#Import des données obtenues via réplication du système KALDI (attention pas de rescoring 5-gram comme pour le système de Zied)
nnet5c_hard_50_300 <- read_delim("/home/getalp/garnerim/Bureau/decode_kaldi/decode-nnet5c/nnet5c_hard_50_300.csv",
"\t",
escape_double = FALSE,
col_types = cols(gender = col_factor(levels = c("female","male")),
spk_class = col_factor(levels = c("4", "1", "3", "2"))),
trim_ws = TRUE)
#On supprime les locuteurs n'ayant pas de genre identifié
nnet5c_hard_50_300 <- subset(nnet5c_hard_50_300,gender!="NA")
# On regroupe par spk/show, recalcul des WER
per_spk_nnet5c_hard_50_300 <- nnet5c_hard_50_300 %>% group_by(spk,show,spk_class,gender) %>% summarize(turns=sum(turns),length=sum(length),mistakes=sum(mistakes),wc=sum(wc),WER=mistakes/wc)
nnet5c_hard_50_300_ext<-subset(per_spk_nnet5c_hard_50_300,spk_class=="4"|spk_class=="1")
ggplot(nnet5c_hard_50_300_ext,aes(x=wc,fill=spk_class))+geom_histogram(position="dodge")
#+scale_x_continuous(lim=c(0,1000))+scale_fill_discrete("Speaker roles",labels=c("Anchors","Punctuals"))
ggplot(nnet5c_hard_50_300_ext,aes(x=wc,y=WER,colour=spk_class))+geom_point()+scale_y_continuous(lim=c(0,1.5))+scale_x_continuous(lim=c(0,3000))+scale_colour_discrete("Speaker roles",labels=c("Anchors","Punctuals"))
ggplot(nnet5c_hard_50_300_ext,aes(x=spk_class,y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))+scale_x_discrete(labels=c("Ancres","Ponctuel·les"))
#h50_300_4<-subset(per_spk_nnet5c_hard_50_300,spk_class==4)
#h50_300_1<-subset(per_spk_nnet5c_hard_50_300,spk_class==1)
#ggplot(h50_300_4,aes(y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))
#ggplot(h50_300_1,aes(y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))
+scale_x_continuous(lim=c(0,1000))+scale_fill_discrete("Speaker roles",labels=c("Anchors","Punctuals"))
ggplot(nnet5c_hard_50_300_ext,aes(x=wc,fill=spk_class))+geom_histogram(position="dodge")+scale_x_continuous(lim=c(0,1000))+scale_fill_discrete("Speaker roles",labels=c("Anchors","Punctuals"))
ggplot(nnet5c_ext,aes(x=wc,fill=spk_class))+geom_histogram(position="dodge",binwidth = 30)+scale_x_continuous("Nombre de mots total par locuteur·trice (ici limité à 1500)",lim=c(0,1500))+scale_fill_discrete("Roles",labels=c("Ancres","Ponctuel·les"))+scale_y_continuous("Nombre de locuteurs·trices")
#ggplot(nnet5c_ext,aes(x=wc,y=WER,colour=spk_class))+geom_point()+scale_y_continuous(lim=c(0,1.5))+scale_x_continuous(lim=c(0,3000))+scale_colour_discrete("Speaker roles",labels=c("Anchors","Punctuals"))
#ggplot(nnet5c_ext,aes(x=spk_class,y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))+scale_x_discrete("",labels=c("Ancres","Ponctuel·les"))+scale_fill_discrete("Genre",labels=c("femme","homme"))
ggplot(nnet5c_ext,aes(x=wc,fill=spk_class))+geom_histogram(position="dodge",bin = 30)+scale_x_continuous("Nombre de mots total par locuteur·trice (ici limité à 1500)",lim=c(0,1500))+scale_fill_discrete("Roles",labels=c("Ancres","Ponctuel·les"))+scale_y_continuous("Nombre de locuteurs·trices")
#ggplot(nnet5c_ext,aes(x=wc,y=WER,colour=spk_class))+geom_point()+scale_y_continuous(lim=c(0,1.5))+scale_x_continuous(lim=c(0,3000))+scale_colour_discrete("Speaker roles",labels=c("Anchors","Punctuals"))
#ggplot(nnet5c_ext,aes(x=spk_class,y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))+scale_x_discrete("",labels=c("Ancres","Ponctuel·les"))+scale_fill_discrete("Genre",labels=c("femme","homme"))
1500/30
ggplot(nnet5c_ext,aes(x=wc,fill=spk_class))+geom_histogram(position="dodge",binwidth = 50)+scale_x_continuous("Nombre de mots total par locuteur·trice (ici limité à 1500)",lim=c(0,1500))+scale_fill_discrete("Roles",labels=c("Ancres","Ponctuel·les"))+scale_y_continuous("Nombre de locuteurs·trices")
ggplot(nnet5c_hard_50_300_ext,aes(x=wc,fill=spk_class))+geom_histogram(position="dodge",binwidth = 50)+scale_x_continuous("Nombre de mots total par locuteur·trice (ici limité à 1500)",lim=c(0,1500))+scale_fill_discrete("Roles",labels=c("Ancres","Ponctuel·les"))+scale_y_continuous("Nombre de locuteurs·trices")
ggplot(nnet5c_hard_50_150_ext,aes(x=wc,fill=spk_class))+geom_histogram(position="dodge",binwidth = 50)+scale_x_continuous("Nombre de mots total par locuteur·trice (ici limité à 1500)",lim=c(0,1500))+scale_fill_discrete("Roles",labels=c("Ancres","Ponctuel·les"))+scale_y_continuous("Nombre de locuteurs·trices")
#Import des données obtenues via réplication du système KALDI (attention pas de rescoring 5-gram comme pour le système de Zied) + définition des classes "en dur", seuils globaux, indépendants des émissions
nnet5c_hard_50_150 <- read_delim("/home/getalp/garnerim/Bureau/decode_kaldi/decode-nnet5c/nnet5c_hard_50_150.csv",
"\t",
escape_double = FALSE,
col_types = cols(gender = col_factor(levels = c("female","male")),
spk_class = col_factor(levels = c("4", "1", "3", "2"))),
trim_ws = TRUE)
#On supprime les locuteurs n'ayant pas de genre identifié
nnet5c_hard_50_150 <- subset(nnet5c_hard_50_150,gender!="NA")
# On regroupe par spk/show, recalcul des WER
per_spk_nnet5c_hard_50_150 <- nnet5c_hard_50_150 %>% group_by(spk,show,spk_class,gender) %>% summarize(turns=sum(turns),length=sum(length),mistakes=sum(mistakes),wc=sum(wc),WER=mistakes/wc)
nnet5c_hard_50_150_ext<-subset(per_spk_nnet5c_hard_50_150,spk_class=="4"|spk_class=="1")
ggplot(nnet5c_hard_50_150_ext,aes(x=wc,fill=spk_class))+geom_histogram(position="dodge",binwidth = 50)+scale_x_continuous("Nombre de mots total par locuteur·trice (ici limité à 1500)",lim=c(0,1500))+scale_fill_discrete("Roles",labels=c("Ancres","Ponctuel·les"))+scale_y_continuous("Nombre de locuteurs·trices")
ggplot(nnet5c_hard_50_300_ext,aes(x=wc,y=WER,colour=spk_class))+geom_point()+scale_y_continuous(lim=c(0,1.5))+scale_x_continuous(lim=c(0,3000))+scale_colour_discrete("Speaker roles",labels=c("Anchors","Punctuals"))
ggplot(nnet5c_hard_50_300_ext,aes(x=spk_class,y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))+scale_x_discrete(labels=c("Ancres","Ponctuel·les"))
#h50_300_4<-subset(per_spk_nnet5c_hard_50_300,spk_class==4)
#h50_300_1<-subset(per_spk_nnet5c_hard_50_300,spk_class==1)
#ggplot(h50_300_4,aes(y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))
#ggplot(h50_300_1,aes(y=WER,fill=gender))+geom_boxplot()+scale_y_continuous(lim=c(0,1.5))
```{r WER50_300, echo=FALSE, fig_show='hold'}
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(tidyr)
library(readr)
library(xtable)
library(knitr)
wer_class_nnet5c <- per_spk_nnet5c %>% group_by(spk_class) %>% summarize(mistakes=sum(mistakes),wc=sum(wc),WER=mistakes/wc)
wer_class_eval <- per_spk_eval %>% group_by(spk_class) %>% summarize(mistakes=sum(mistakes),wc=sum(wc),WER=mistakes/wc)
nnet5c_extremes<-subset(per_spk_nnet5c,spk_class=="4"|spk_class=="1")
ggplot(nnet5c_extremes,aes(x=wc,fill=spk_class))+geom_histogram(position="dodge")+scale_x_continuous(lim=c(0,1000))+scale_fill_discrete("Speaker roles",labels=c("Anchors","Punctuals"))
nnet5c_4<-subset(per_spk_nnet5c,spk_class==4)
nnet5c_1<-subset(per_spk_nnet5c,spk_class==1)
#Nombre d'ancres ayant moins de 150 mots
#length(nnet5c_4$show[nnet5c_4$wc<150])
#Nombre de ponctuel·les ayant plus de 1000 mots
#length(nnet5c_1$show[nnet5c_1$wc>1000])
#unique(nnet5c_4$show[nnet5c_4$wc<150])
#unique(nnet5c_1$show[nnet5c_1$wc>1000])
View(nnet5c_4)
summary(nnet5c_4)
summary(nnet5c_1)
203/866
603/866
64/213
149/213
213+866
213/1079
213/1079
866/1079
install.packages("devtools")
devtools::install_github("dapperstats/gendrendr")
library(devtooms)
library(devtools)
install.packages("devtools")
source('~/Bureau/openslr/openslr_gender_survey/openslr.R')
View(prov)
summary(prov)
summary(prov)
View(prov)
source('~/Bureau/openslr/openslr_gender_survey/openslr.R')
summup_oslr <- read_delim("summup_oslr.csv", ";",
escape_double = FALSE,
col_types = cols(`#spk` = col_integer(),
`#spk_f` = col_integer(),
`#spk_m` = col_integer(),
elicited = col_factor(levels = c("yes","no")),
found_in = col_factor(levels = c("metadata",
"indexed",
"paper",
"manually")),
lang_status = col_factor(levels = c("Low-resource","High-resource")),
provided = col_factor(levels = c("yes","no")),
sampling = col_factor(levels = c("8000",
"16000",
"22050",
"44100",
"48000")),
lang_status = col_factor(levels = c("Low-resource","High-resource")),
task = col_factor(levels = c("ASR","TTS"))),
locale = locale(decimal_mark = ",", grouping_mark = ""),
trim_ws = TRUE)
# Global statistics,  #resources, languages, with and without accent/dialect variation
corpora <- summup_oslr %>% group_by(id) %>% summarize() # 53 speech resources
lang <- summup_oslr %>% group_by(lang) %>% summarize() # 33 different languages
lang_dial <- summup_oslr %>% group_by(lang,dial) %>% summarize() #51 dial/accent variations
# In total 66 resources: if we divide resources containing different languages and/or accents/dialects
summary(summup_oslr$provided)
# 24/66 = 36,4% of the corpora without gender info
nprov<-subset(summup_oslr,provided=="no")
summary(nprov$`#spk`)
#Creating a subset with all corpora with gender info provided
prov <- subset(summup_oslr,provided=="yes")
summary(prov)
42-37
View(gender_elicited)
View(gender_utt2)
408/(408+524)
143/(143+67)
#Examining gender difference at the utterance level
utt<-subset(summup_oslr,`#utt_m`!="NA") # We create a subset containing corpora with gendered utterance info provided
gender_utt <- utt %>% summarize(corpora=n(),
nb_m=sum(utt$`#spk_m`,na.rm=T),
nb_f=sum(utt$`#spk_f`,na.rm=T),
sum_utt_m=sum(utt$`#utt_m`),
sum_utt_f=sum(utt$`#utt_f`))
gender_utt2 <- utt %>% group_by(elicited) %>% summarize(corpora=n(),nb_m=sum(`#spk_m`,na.rm=T),
nb_f=sum(`#spk_f`,na.rm=T),
sum_utt_m=sum(`#utt_m`),
sum_utt_f=sum(`#utt_f`))
ggplot(utt,aes(`#utt_m`))+geom_histogram()
ggplot(utt,aes(`#utt_f`))+geom_histogram()
gender <- summup_full %>% summarise(spk_f = sum(`#spk_f`),spk_m = sum(`#spk_m`))
source('~/Bureau/openslr/openslr_gender_survey/openslr.R')
View(gender)
summary(utt)
summary(summup_eli)
gender_utt <- utt %>% summarize(corpora=n(),
nb_m=sum(utt$`#spk_m`,na.rm=T),
nb_f=sum(utt$`#spk_f`,na.rm=T),
sum_utt_m=sum(utt$`#utt_m`),
sum_utt_f=sum(utt$`#utt_f`))
gender_utt2 <- utt %>% group_by(elicited) %>% summarize(corpora=n(),nb_m=sum(`#spk_m`,na.rm=T),
nb_f=sum(`#spk_f`,na.rm=T),
sum_utt_m=sum(`#utt_m`),
sum_utt_f=sum(`#utt_f`))
summary(utt)
summup_oslr <- read_delim("summup_oslr.csv", ";",
escape_double = FALSE,
col_types = cols(`#spk` = col_integer(),
`#spk_f` = col_integer(),
`#spk_m` = col_integer(),
elicited = col_factor(levels = c("yes","no")),
found_in = col_factor(levels = c("metadata",
"indexed",
"paper",
"manually")),
lang_status = col_factor(levels = c("Low-resource","High-resource")),
provided = col_factor(levels = c("yes","no")),
sampling = col_factor(levels = c("8000",
"16000",
"22050",
"44100",
"48000")),
lang_status = col_factor(levels = c("Low-resource","High-resource")),
task = col_factor(levels = c("ASR","TTS"))),
locale = locale(decimal_mark = ",", grouping_mark = ""),
trim_ws = TRUE)
# Global statistics,  #resources, languages, with and without accent/dialect variation
corpora <- summup_oslr %>% group_by(id) %>% summarize() # 53 speech resources
lang <- summup_oslr %>% group_by(lang) %>% summarize() # 33 different languages
lang_dial <- summup_oslr %>% group_by(lang,dial) %>% summarize() #51 dial/accent variations
# In total 66 resources: if we divide resources containing different languages and/or accents/dialects
summary(summup_oslr$provided)
# 24/66 = 36,4% of the corpora without gender info
nprov<-subset(summup_oslr,provided=="no")
summary(nprov$`#spk`)
#Creating a subset with all corpora with gender info provided
prov <- subset(summup_oslr,provided=="yes")
summary(prov)
#Count where info was found
prov_stat <- prov %>% group_by(found_in) %>% summarize(count=n())
#Create a subset containing only corpora with gender info
#(different from the one above as we sometimes looked for the info manually)
summup_full <- subset(summup_oslr,!is.na(`#spk_f`))
gender <- summup_full %>% summarise(spk_f = sum(`#spk_f`),spk_m = sum(`#spk_m`))
#Examining gender difference regarding elicitation status
gender_elicited <- summup_full %>% group_by(elicited) %>% summarise(count = n(),
spk_f = sum(`#spk_f`),
spk_m = sum(`#spk_m`),
spk_total = spk_m+spk_f,
per_f = spk_f/spk_total*100,
per_m =spk_m/spk_total*100)
#Creating a subset without Librispeech
summup_woLS <- subset(summup_full, id!="SLR12")
gender_elicited_woLS_s <- summup_woLS %>% group_by(elicited,size) %>% summarise(count = n(),
spk_f = sum(`#spk_f`),
spk_m = sum(`#spk_m`),
spk_total = spk_m+spk_f,
per_f = spk_f/spk_total*100,
per_m =spk_m/spk_total*100)
#Examining gender difference regarding language status in elicited corpora
summup_eli <- subset(summup_full,elicited=="yes")
gender_lang_eli <- summup_eli %>% group_by(lang_status) %>% summarise(count = n(),
spk_f = sum(`#spk_f`),
spk_m = sum(`#spk_m`),
spk_total = spk_m+spk_f,
per_f = spk_f/spk_total*100,
per_m =spk_m/spk_total*100)
#Examining gender difference regarding the task
gender_task<- summup_full %>% group_by(task) %>% summarise(count = n(),
spk_f = sum(`#spk_f`),
spk_m = sum(`#spk_m`),
spk_total = spk_m+spk_f,
per_f = spk_f/spk_total*100,
per_m =spk_m/spk_total*100)
#Crossing parameters : task, elicitation status and language status
gender_task_stat <- summup_full %>% group_by(task,elicited,lang_status) %>% summarise(count = n(),
spk_f = sum(`#spk_f`),
spk_m = sum(`#spk_m`),
spk_total = spk_m+spk_f,
per_f = spk_f/spk_total*100,
per_m =spk_m/spk_total*100)
#Examining gender difference at the utterance level
utt<-subset(summup_oslr,`#utt_m`!="NA") # We create a subset containing corpora with gendered utterance info provided
gender_utt <- utt %>% summarize(corpora=n(),
nb_m=sum(utt$`#spk_m`,na.rm=T),
nb_f=sum(utt$`#spk_f`,na.rm=T),
sum_utt_m=sum(utt$`#utt_m`),
sum_utt_f=sum(utt$`#utt_f`))
gender_utt2 <- utt %>% group_by(elicited) %>% summarize(corpora=n(),nb_m=sum(`#spk_m`,na.rm=T),
nb_f=sum(`#spk_f`,na.rm=T),
sum_utt_m=sum(`#utt_m`),
sum_utt_f=sum(`#utt_f`))
#Evolution in time
ggplot(summup_oslr,aes(x=year,fill=provided))+geom_bar()+
labs(x="Year",y="Numberof corpora",fill="Gender info\n provided")+
scale_x_continuous(lim=c(2010,2020),labels = scales::number_format(big.mark = ""))+
theme_bw()+
theme(axis.text = element_text(size=18),
legend.title = element_text(size=18),
legend.text = element_text(size=15),
panel.grid.major.y = element_line(linetype=3))+
scale_fill_grey()
summary(utt)
summary(prov)
summary(utt)
